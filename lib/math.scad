
function xor(a,b) = (a || b) && !(a && b);

function m4_identity() = [[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]];

function m4_det(a) =
  a[0][3]*a[1][2]*a[2][1]*a[3][0] - a[0][2]*a[1][3]*a[2][1]*a[3][0] - a[0][3]*a[1][1]*a[2][2]*a[3][0] + a[0][1]*a[1][3]*a[2][2]*a[3][0] + 
  a[0][2]*a[1][1]*a[2][3]*a[3][0] - a[0][1]*a[1][2]*a[2][3]*a[3][0] - a[0][3]*a[1][2]*a[2][0]*a[3][1] + a[0][2]*a[1][3]*a[2][0]*a[3][1] + 
  a[0][3]*a[1][0]*a[2][2]*a[3][1] - a[0][0]*a[1][3]*a[2][2]*a[3][1] - a[0][2]*a[1][0]*a[2][3]*a[3][1] + a[0][0]*a[1][2]*a[2][3]*a[3][1] + 
  a[0][3]*a[1][1]*a[2][0]*a[3][2] - a[0][1]*a[1][3]*a[2][0]*a[3][2] - a[0][3]*a[1][0]*a[2][1]*a[3][2] + a[0][0]*a[1][3]*a[2][1]*a[3][2] + 
  a[0][1]*a[1][0]*a[2][3]*a[3][2] - a[0][0]*a[1][1]*a[2][3]*a[3][2] - a[0][2]*a[1][1]*a[2][0]*a[3][3] + a[0][1]*a[1][2]*a[2][0]*a[3][3] + 
  a[0][2]*a[1][0]*a[2][1]*a[3][3] - a[0][0]*a[1][2]*a[2][1]*a[3][3] - a[0][1]*a[1][0]*a[2][2]*a[3][3] + a[0][0]*a[1][1]*a[2][2]*a[3][3];

function m4_inverse(a)=[
  [
  (a[1][2]*a[2][3]*a[3][1]-a[1][3]*a[2][2]*a[3][1]+a[1][3]*a[2][1]*a[3][2]-a[1][1]*a[2][3]*a[3][2]-a[1][2]*a[2][1]*a[3][3]+a[1][1]*a[2][2]*a[3][3]),
  (a[0][3]*a[2][2]*a[3][1]-a[0][2]*a[2][3]*a[3][1]-a[0][3]*a[2][1]*a[3][2]+a[0][1]*a[2][3]*a[3][2]+a[0][2]*a[2][1]*a[3][3]-a[0][1]*a[2][2]*a[3][3]),
  (a[0][2]*a[1][3]*a[3][1]-a[0][3]*a[1][2]*a[3][1]+a[0][3]*a[1][1]*a[3][2]-a[0][1]*a[1][3]*a[3][2]-a[0][2]*a[1][1]*a[3][3]+a[0][1]*a[1][2]*a[3][3]),
  (a[0][3]*a[1][2]*a[2][1]-a[0][2]*a[1][3]*a[2][1]-a[0][3]*a[1][1]*a[2][2]+a[0][1]*a[1][3]*a[2][2]+a[0][2]*a[1][1]*a[2][3]-a[0][1]*a[1][2]*a[2][3]),
  ],[
  (a[1][3]*a[2][2]*a[3][0]-a[1][2]*a[2][3]*a[3][0]-a[1][3]*a[2][0]*a[3][2]+a[1][0]*a[2][3]*a[3][2]+a[1][2]*a[2][0]*a[3][3]-a[1][0]*a[2][2]*a[3][3]),
  (a[0][2]*a[2][3]*a[3][0]-a[0][3]*a[2][2]*a[3][0]+a[0][3]*a[2][0]*a[3][2]-a[0][0]*a[2][3]*a[3][2]-a[0][2]*a[2][0]*a[3][3]+a[0][0]*a[2][2]*a[3][3]),
  (a[0][3]*a[1][2]*a[3][0]-a[0][2]*a[1][3]*a[3][0]-a[0][3]*a[1][0]*a[3][2]+a[0][0]*a[1][3]*a[3][2]+a[0][2]*a[1][0]*a[3][3]-a[0][0]*a[1][2]*a[3][3]),
  (a[0][2]*a[1][3]*a[2][0]-a[0][3]*a[1][2]*a[2][0]+a[0][3]*a[1][0]*a[2][2]-a[0][0]*a[1][3]*a[2][2]-a[0][2]*a[1][0]*a[2][3]+a[0][0]*a[1][2]*a[2][3]),
  ],[
  (a[1][1]*a[2][3]*a[3][0]-a[1][3]*a[2][1]*a[3][0]+a[1][3]*a[2][0]*a[3][1]-a[1][0]*a[2][3]*a[3][1]-a[1][1]*a[2][0]*a[3][3]+a[1][0]*a[2][1]*a[3][3]),
  (a[0][3]*a[2][1]*a[3][0]-a[0][1]*a[2][3]*a[3][0]-a[0][3]*a[2][0]*a[3][1]+a[0][0]*a[2][3]*a[3][1]+a[0][1]*a[2][0]*a[3][3]-a[0][0]*a[2][1]*a[3][3]),
  (a[0][1]*a[1][3]*a[3][0]-a[0][3]*a[1][1]*a[3][0]+a[0][3]*a[1][0]*a[3][1]-a[0][0]*a[1][3]*a[3][1]-a[0][1]*a[1][0]*a[3][3]+a[0][0]*a[1][1]*a[3][3]),
  (a[0][3]*a[1][1]*a[2][0]-a[0][1]*a[1][3]*a[2][0]-a[0][3]*a[1][0]*a[2][1]+a[0][0]*a[1][3]*a[2][1]+a[0][1]*a[1][0]*a[2][3]-a[0][0]*a[1][1]*a[2][3]),
  ],[
  (a[1][2]*a[2][1]*a[3][0]-a[1][1]*a[2][2]*a[3][0]-a[1][2]*a[2][0]*a[3][1]+a[1][0]*a[2][2]*a[3][1]+a[1][1]*a[2][0]*a[3][2]-a[1][0]*a[2][1]*a[3][2]),
  (a[0][1]*a[2][2]*a[3][0]-a[0][2]*a[2][1]*a[3][0]+a[0][2]*a[2][0]*a[3][1]-a[0][0]*a[2][2]*a[3][1]-a[0][1]*a[2][0]*a[3][2]+a[0][0]*a[2][1]*a[3][2]),
  (a[0][2]*a[1][1]*a[3][0]-a[0][1]*a[1][2]*a[3][0]-a[0][2]*a[1][0]*a[3][1]+a[0][0]*a[1][2]*a[3][1]+a[0][1]*a[1][0]*a[3][2]-a[0][0]*a[1][1]*a[3][2]),
  (a[0][1]*a[1][2]*a[2][0]-a[0][2]*a[1][1]*a[2][0]+a[0][2]*a[1][0]*a[2][1]-a[0][0]*a[1][2]*a[2][1]-a[0][1]*a[1][0]*a[2][2]+a[0][0]*a[1][1]*a[2][2]),
  ]
  ]*(1.0/m4_det(a));

function m4_transform_p(p) = [
  [1,0,0,p[0]],
  [0,1,0,p[1]],
  [0,0,1,p[2]],
  [0,0,0,1]
];

function m4_transform_yzx(p) = [
  [0,0,1,p[2]],
  [1,0,0,p[0]],
  [0,1,0,p[1]],
  [0,0,0,1]
];


function m4_transform_xzy(p) = [
  [1,0,0,p[0]],
  [0,0,1,p[2]],
  [0,1,0,p[1]],
  [0,0,0,1]
];

function m4_transform_puvw(p,u,v,w) = [
    [u[0],v[0],w[0],p[0]],
    [u[1],v[1],w[1],p[1]],
    [u[2],v[2],w[2],p[2]],
    [0,0,0,1]
  ];

function m4_transform_puv(p,u,v) =
  m4_transform_puvw(
    p,u,v,cross(u,v)
  );
function m4_transform_pexez(p,ex,ez) =
  m4_transform_puv(
    p,
    ex/norm(ex),
    (cross(ez,ex)/norm(cross(ez,ex)))
  );


function m4_transform_arb_int(p,ex,ey,ez,angs,xyz,yzx,xzy,hx,hy,hz) =
  (xyz!=undef) ? m4_transform_p  (len(xyz)==undef ? [0,0,xyz] : xyz) :
  (yzx!=undef) ? m4_transform_yzx(len(yzx)==undef ? [0,0,yzx] : yzx) :
  (xzy!=undef) ? m4_transform_xzy(len(xzy)==undef ? [0,0,xzy] : xzy) :
  (angs==undef) ? (
    (false) ? ( m4_identity()
    ):( ( hx&& hy && hz) ? (                         m4_transform_pexez(p,ex,ez)
    ):( (!hx&& hy && hz) ? (                         m4_transform_pexez(p,cross(ey,ez),ez)
    ):( ( hx&&!hy && hz) ? (                         m4_transform_pexez(p,ex,ez)
    ):( ( hx&& hy &&!hz) ? (                         m4_transform_pexez(p,ex,cross(ex,ey))
    ):( (hx) ? (                                     m4_transform_arb(p,ex=ex,ey=cross([0,0,1],ex))
    ):( (hy) ? (                                     m4_transform_arb(p,ey=ey,ex=cross(ey,[0,0,1]))
    ):( (hz && (abs(dot(hz,[0,0,1]))==norm(ez))) ? ( m4_identity()
    ):( (hz) ? (                                     m4_transform_arb(p,ez=ez,ex=cross(ez,[0,0,1]))
    ):( m4_transform_p(p) )))))))))
  ) : (
    m4_identity() // todo: generate proper matrix
  );

function m4_transform_arb(
  p=undef,ex=undef,ey=undef,ez=undef,angs=undef,
  xyz=undef,yzx=undef,xzy=undef
  ) =
  m4_transform_arb_int(
    p==undef ? [0,0,0] : p,
    ex,ey,ez,angs,
    xyz,yzx,xzy,
    ex!=undef,
    ey!=undef,
    ez!=undef
  );


function clip2d_line_halfspace_int(p,q,n,o,d1,d2) =
  (d1==d2) ? (
    (d1<0) ? (
      undef
    ) : (
      [p,q]
    )
  ) : (
    (d2<0) ? clip2d_line_halfspace_int(q,p,n,o,d2,d1) : (
      [
        p+(p*n-o)*(q-p)/norm(p-q) / ((p-q)*n/norm(p-q))
        ,q
      ]
    )
  );

function clip2d_line_halfspace(l,n,o) =
  (l==undef) 
  ? undef 
  : clip2d_line_halfspace_int(l[0],l[1],n,o, l[0]*n-o<-1e-8 ? -1 : 1,l[1]*n-o<-1e-8 ? -1 : 1);

function clip2d_line_rect(v,w,h) =
  clip2d_line_halfspace(
    clip2d_line_halfspace(
      clip2d_line_halfspace(
        clip2d_line_halfspace(v,[1,0],0),[-1,0],-w),[0,1],0),[0,-1],-h);

function proj_point(p,m) =
  [
  subvec3(m*[1,0,0,0])*(p-subvec3(m*[0,0,0,1])),
  subvec3(m*[0,1,0,0])*(p-subvec3(m*[0,0,0,1]))
  ];
